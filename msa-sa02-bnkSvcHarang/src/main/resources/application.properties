# 일반적으로 해당 설정의 파일은 서비스마다 설정이 가능하지만 
# 현재는 Config 서버가 일괄 적으로 관리가 가능 
# 문제는 이렇게 하면 각각의 설정을 중앙에서 관리 하기 때문에 중앙에서 설정한 내용대로 maven 의존성을 구성해야 함
# 따라서 여기에 딱히 구현해야 할게 없음. 이미 config 서버에서 해놨으니까...

# 이거 빼고
management.endpoints.web.exposure.include=*

# 1. Eureka 서비스 설정
# 유레카 레지스트리 서버 주소 : 이걸 등록을 해주어야 해당 클라이언트 API가 유레카레지스트리 서버에 등록이된다.
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
# 유레카 서비스 위치 확인
# true : 검색할때마다 유레카 서비스를 호출하는 대신 레지스트리가 로컬로 캐시된다. 30초마다 클라이언트 소프트웨어는 유레카 서비스에 레지스트리 변경 사항 여부를 확인한다.
eureka.client.fetch-registry=true
# 유레카에 서비스 등록 : 조직서비스 자신을 율카 서비스에 등록하도록 지정
eureka.client.register-with-eureka=true

# 서비스 이름 대신 서비스 IP 주소 등록
# 이 설정을 하는 이유 : 컨테이너 기반의 배포(도커)에서 컨테이너는 DNS엔트리가 없는 임의로 생성된 호스트의 이름을 부여 받아 시작한다.
# false로 생설할 경우 해당 컨테이너에 대한 DNS엔트리가 없으므로 클라이언트 애플리케이션은 호스트 이름 위치를 정상적으로 얻지 못한다.
# 클라우드 기반 MSA는 일시적이며 무상태여야 하므로 자유롭게 시작하고 종료될 수 있기 때뭉에 항상 true로 설정할것
eureka.instance.prefer-ip-address=true

# 보안 인증 콜백 URL
security.oauth2.resource.user-info-uri=http://localhost:8901/auth/user