# 추후에 Eureka Client가 Eureka Server에 자신을 등록할 때 application.name으로 등록됨
spring.application.name=bnkRegSvr
server.port=8761

# 공통 사이트 주소, ip 정보 설정
eureka.instance.hostname=localhost

# 자신을 유레카 서비스에 등록하지 않는다.
# eureka server는 서버이면서 client가 될 수도 있음
eureka.client.register-with-eureka=false

# 레지스트리 정보를 로컬에 캐싱 하지 않는다.
eureka.client.fetch-registry=false

# 서버요청을 받기 전 대기할 초기 시간
eureka.server.wait-time-in-ms-when-sync-empty=30

# Eureka Registry Server임을 선언 : 해당 서버의 주소정보로 각각의 MSA정보가 포트별로 정리되어 관리된다.
# Registry Server를 설정할때 가장 중요한 점은 cluster 로 구성을 해야한다.
# 그 이유는 Registry Server가 죽으면 마이크로 서비스가 연결이 아예 안되기 때문이다.
# eureka 로 cluster 를 하기 가장 쉬운 방법은 eureka server를 여러대 띄운 후,
# 각 마이크로 서비스의 eureka 설정에서 아래와 같이 주소를 여러개 나열하는 방법이다.
eureka.client.service-url.defaultZone=http://${eureka.instance.hostname}:${server.port}/eureka,http://${eureka.instance.hostname}:8762/eureka